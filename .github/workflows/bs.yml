name: Builds, tests & co

on:
  - push
  - pull_request

permissions: read-all

jobs:
  bwrap-test:
    runs-on: ubuntu-latest

    steps:
      - name: Start privileged container and keep it
        run: |
          docker run -d --privileged --user root --name my-ocaml-container ocaml/opam:ubuntu-ocaml-5.2 sleep infinity

      - name: Clone this repo inside container
        run: |
          docker exec my-ocaml-container bash -c '
            git clone https://github.com/${{ github.repository }} /workspace &&
            cd /workspace &&
            git checkout ${{ github.ref }}'
        
      - name: Let me see what's inside
        run: docker exec my-ocaml-container ls /workspace
      
      - name: Install dependencies inside the running container
        run: |
          docker exec my-ocaml-container bash -c '
            apt update &&
            apt install -y bubblewrap libkrb5-dev &&
            sysctl -w kernel.unprivileged_userns_clone=1 &&
            echo "Trying bubblewrap..." &&
            bwrap --dev-bind / / echo "Bubblewrap works!"'        

      - name: Copy SSH key into container
        run: |
          docker exec my-ocaml-container bash -c '
            mkdir -p /root/.ssh &&
            echo "${{ secrets.TARGET_REPO_SSH_KEY }}" > /root/.ssh/id_ed25519 &&
            chmod 600 /root/.ssh/id_ed25519 &&
            echo -e "Host github.com\n  StrictHostKeyChecking no\n  IdentityFile ~/.ssh/id_ed25519\n  User git" > /root/.ssh/config'

      - name: See if the ssh works
        run: |
          docker exec my-ocaml-container bash -c '
            git clone git@github.com:brai-m/benchmark-data.git &&
            git config --global user.name "CI Bot" &&
            git config --global user.email "ci@example.com" &&
            ls'
                  
      - name: Check if opam is available
        run: docker exec my-ocaml-container opam --version
          
      # - name: Try to install
      #   run: |
      #     docker exec my-ocaml-container bash -c '
      #       cd /workspace &&
      #       eval $(opam env) &&
      #       opam install -y .'
      
      # - name: Verify installation
      #   run: |
      #     docker exec my-ocaml-container bash -c '
      #       cd /workspace &&
      #       eval $(opam env) &&
      #       which tactician-benchmark'


      # - name: Run a privileged OCaml container
      #   run: |
      #     docker run --rm --privileged --user root ocaml/opam:ubuntu-ocaml-4.11 bash -c '
      #       apt update &&
      #       apt install -y bubblewrap &&
      #       sysctl -w kernel.unprivileged_userns_clone=1 &&
      #       echo "Trying bubblewrap..." &&
      #       bwrap --dev-bind / / echo "Bubblewrap works!"'

      # - name: See if OPAM is available
      #   run: |
      #     opam switch
      #     # docker run --rm --privileged ocaml/opam:ubuntu-ocaml-4.11 id
      #     # docker run --rm --privileged ocaml/opam:ubuntu-ocaml-4.11 bash -c '
      #     #   apt update &&
      #     #   apt install -y bubblewrap &&
      #     #   sysctl -w kernel.unprivileged_userns_clone=1 || true &&
      #     #   echo "Trying bubblewrap..." &&
      #     #   bwrap --dev-bind / / echo "Bubblewrap works!"'
    # container:
    #   image: ocaml/opam:ubuntu-ocaml-4.11
    #   options: --privileged

    # steps:
    #   - name: Update apt and install bubblewrap
    #     run: |
    #       sudo apt update
    #       sudo apt install -y bubblewrap

    #   - name: Try bubblewrap
    #     run: |
    #       sysctl -w kernel.unprivileged_userns_clone=1 || true
    #       bwrap --dev-bind / / echo "âœ… Bubblewrap works!"

  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: See if privileged Docker works 
  #       run: |
  #         docker run --privileged ubuntu echo "Hello from privileged Docker"

      # - name: Test bubblewrap in privileged container
      #   run: |
      #     docker run --rm --privileged ubuntu bash -c '
      #       apt update && apt install -y bubblewrap &&
      #       sysctl -w kernel.unprivileged_userns_clone=1 &&
      #       bwrap --dev-bind / / echo "Bubblewrap works!"'
        
      # - name: Checkout tree
      #   uses: actions/checkout@v4

      # - name: Set-up OCaml (4.11)
      #   uses: ocaml/setup-ocaml@v3
      #   with:
      #     ocaml-compiler: 4.11

      # - name: Add Coq OPAM repositories
      #   run: |
      #     opam repo add coq-released https://coq.inria.fr/opam/released
      #     opam repo add coq-core-dev https://coq.inria.fr/opam/core-dev
      #     opam repo add coq-extra-dev https://coq.inria.fr/opam/extra-dev

      # - name: Test bwrap
      #   run: bwrap --dev-bind / / echo "bubblewrap is working!"

      # - name: what's going on
      #   run: |
      #     docker exec my-ocaml-container bash -c '
      #       echo "whoami: $(whoami)"
      #       echo "mount info:"; mount | grep workspace || true
      #       echo "listing:"; ls -la /workspace'